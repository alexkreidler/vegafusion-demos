/**
 * @fileoverview gRPC-Web generated client stub for services
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.20.3
// source: services.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as pretransform_pb from './pretransform_pb';
import * as services_pb from './services_pb';


export class VegaFusionRuntimeClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorTaskGraphQuery = new grpcWeb.MethodDescriptor(
    '/services.VegaFusionRuntime/TaskGraphQuery',
    grpcWeb.MethodType.UNARY,
    services_pb.QueryRequest,
    services_pb.QueryResult,
    (request: services_pb.QueryRequest) => {
      return request.serializeBinary();
    },
    services_pb.QueryResult.deserializeBinary
  );

  taskGraphQuery(
    request: services_pb.QueryRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_pb.QueryResult>;

  taskGraphQuery(
    request: services_pb.QueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_pb.QueryResult) => void): grpcWeb.ClientReadableStream<services_pb.QueryResult>;

  taskGraphQuery(
    request: services_pb.QueryRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_pb.QueryResult) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.VegaFusionRuntime/TaskGraphQuery',
        request,
        metadata || {},
        this.methodDescriptorTaskGraphQuery,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.VegaFusionRuntime/TaskGraphQuery',
    request,
    metadata || {},
    this.methodDescriptorTaskGraphQuery);
  }

  methodDescriptorPreTransformSpec = new grpcWeb.MethodDescriptor(
    '/services.VegaFusionRuntime/PreTransformSpec',
    grpcWeb.MethodType.UNARY,
    pretransform_pb.PreTransformSpecRequest,
    services_pb.PreTransformSpecResult,
    (request: pretransform_pb.PreTransformSpecRequest) => {
      return request.serializeBinary();
    },
    services_pb.PreTransformSpecResult.deserializeBinary
  );

  preTransformSpec(
    request: pretransform_pb.PreTransformSpecRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_pb.PreTransformSpecResult>;

  preTransformSpec(
    request: pretransform_pb.PreTransformSpecRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_pb.PreTransformSpecResult) => void): grpcWeb.ClientReadableStream<services_pb.PreTransformSpecResult>;

  preTransformSpec(
    request: pretransform_pb.PreTransformSpecRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_pb.PreTransformSpecResult) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.VegaFusionRuntime/PreTransformSpec',
        request,
        metadata || {},
        this.methodDescriptorPreTransformSpec,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.VegaFusionRuntime/PreTransformSpec',
    request,
    metadata || {},
    this.methodDescriptorPreTransformSpec);
  }

  methodDescriptorPreTransformValues = new grpcWeb.MethodDescriptor(
    '/services.VegaFusionRuntime/PreTransformValues',
    grpcWeb.MethodType.UNARY,
    pretransform_pb.PreTransformValuesRequest,
    services_pb.PreTransformValuesResult,
    (request: pretransform_pb.PreTransformValuesRequest) => {
      return request.serializeBinary();
    },
    services_pb.PreTransformValuesResult.deserializeBinary
  );

  preTransformValues(
    request: pretransform_pb.PreTransformValuesRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_pb.PreTransformValuesResult>;

  preTransformValues(
    request: pretransform_pb.PreTransformValuesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_pb.PreTransformValuesResult) => void): grpcWeb.ClientReadableStream<services_pb.PreTransformValuesResult>;

  preTransformValues(
    request: pretransform_pb.PreTransformValuesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_pb.PreTransformValuesResult) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.VegaFusionRuntime/PreTransformValues',
        request,
        metadata || {},
        this.methodDescriptorPreTransformValues,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.VegaFusionRuntime/PreTransformValues',
    request,
    metadata || {},
    this.methodDescriptorPreTransformValues);
  }

  methodDescriptorPreTransformExtract = new grpcWeb.MethodDescriptor(
    '/services.VegaFusionRuntime/PreTransformExtract',
    grpcWeb.MethodType.UNARY,
    pretransform_pb.PreTransformExtractRequest,
    services_pb.PreTransformExtractResult,
    (request: pretransform_pb.PreTransformExtractRequest) => {
      return request.serializeBinary();
    },
    services_pb.PreTransformExtractResult.deserializeBinary
  );

  preTransformExtract(
    request: pretransform_pb.PreTransformExtractRequest,
    metadata: grpcWeb.Metadata | null): Promise<services_pb.PreTransformExtractResult>;

  preTransformExtract(
    request: pretransform_pb.PreTransformExtractRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: services_pb.PreTransformExtractResult) => void): grpcWeb.ClientReadableStream<services_pb.PreTransformExtractResult>;

  preTransformExtract(
    request: pretransform_pb.PreTransformExtractRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: services_pb.PreTransformExtractResult) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/services.VegaFusionRuntime/PreTransformExtract',
        request,
        metadata || {},
        this.methodDescriptorPreTransformExtract,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/services.VegaFusionRuntime/PreTransformExtract',
    request,
    metadata || {},
    this.methodDescriptorPreTransformExtract);
  }

}

