// source: services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var tasks_pb = require('./tasks_pb.js');
goog.object.extend(proto, tasks_pb);
var pretransform_pb = require('./pretransform_pb.js');
goog.object.extend(proto, pretransform_pb);
var errors_pb = require('./errors_pb.js');
goog.object.extend(proto, errors_pb);
goog.exportSymbol('proto.services.PreTransformExtractResult', null, global);
goog.exportSymbol('proto.services.PreTransformExtractResult.ResultCase', null, global);
goog.exportSymbol('proto.services.PreTransformSpecResult', null, global);
goog.exportSymbol('proto.services.PreTransformSpecResult.ResultCase', null, global);
goog.exportSymbol('proto.services.PreTransformValuesResult', null, global);
goog.exportSymbol('proto.services.PreTransformValuesResult.ResultCase', null, global);
goog.exportSymbol('proto.services.QueryRequest', null, global);
goog.exportSymbol('proto.services.QueryRequest.RequestCase', null, global);
goog.exportSymbol('proto.services.QueryResult', null, global);
goog.exportSymbol('proto.services.QueryResult.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.QueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.QueryRequest.oneofGroups_);
};
goog.inherits(proto.services.QueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.QueryRequest.displayName = 'proto.services.QueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.QueryResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.QueryResult.oneofGroups_);
};
goog.inherits(proto.services.QueryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.QueryResult.displayName = 'proto.services.QueryResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PreTransformSpecResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.PreTransformSpecResult.oneofGroups_);
};
goog.inherits(proto.services.PreTransformSpecResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PreTransformSpecResult.displayName = 'proto.services.PreTransformSpecResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PreTransformValuesResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.PreTransformValuesResult.oneofGroups_);
};
goog.inherits(proto.services.PreTransformValuesResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PreTransformValuesResult.displayName = 'proto.services.PreTransformValuesResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.PreTransformExtractResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.PreTransformExtractResult.oneofGroups_);
};
goog.inherits(proto.services.PreTransformExtractResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.PreTransformExtractResult.displayName = 'proto.services.PreTransformExtractResult';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.QueryRequest.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.services.QueryRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  TASK_GRAPH_VALUES: 1
};

/**
 * @return {proto.services.QueryRequest.RequestCase}
 */
proto.services.QueryRequest.prototype.getRequestCase = function() {
  return /** @type {proto.services.QueryRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.services.QueryRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.QueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.QueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.QueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.QueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskGraphValues: (f = msg.getTaskGraphValues()) && tasks_pb.TaskGraphValueRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.QueryRequest}
 */
proto.services.QueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.QueryRequest;
  return proto.services.QueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.QueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.QueryRequest}
 */
proto.services.QueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tasks_pb.TaskGraphValueRequest;
      reader.readMessage(value,tasks_pb.TaskGraphValueRequest.deserializeBinaryFromReader);
      msg.setTaskGraphValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.QueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.QueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.QueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.QueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskGraphValues();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tasks_pb.TaskGraphValueRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional tasks.TaskGraphValueRequest task_graph_values = 1;
 * @return {?proto.tasks.TaskGraphValueRequest}
 */
proto.services.QueryRequest.prototype.getTaskGraphValues = function() {
  return /** @type{?proto.tasks.TaskGraphValueRequest} */ (
    jspb.Message.getWrapperField(this, tasks_pb.TaskGraphValueRequest, 1));
};


/**
 * @param {?proto.tasks.TaskGraphValueRequest|undefined} value
 * @return {!proto.services.QueryRequest} returns this
*/
proto.services.QueryRequest.prototype.setTaskGraphValues = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.services.QueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.QueryRequest} returns this
 */
proto.services.QueryRequest.prototype.clearTaskGraphValues = function() {
  return this.setTaskGraphValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.QueryRequest.prototype.hasTaskGraphValues = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.QueryResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.QueryResult.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  ERROR: 1,
  TASK_GRAPH_VALUES: 2
};

/**
 * @return {proto.services.QueryResult.ResponseCase}
 */
proto.services.QueryResult.prototype.getResponseCase = function() {
  return /** @type {proto.services.QueryResult.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.services.QueryResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.QueryResult.prototype.toObject = function(opt_includeInstance) {
  return proto.services.QueryResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.QueryResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.QueryResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && errors_pb.Error.toObject(includeInstance, f),
    taskGraphValues: (f = msg.getTaskGraphValues()) && tasks_pb.TaskGraphValueResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.QueryResult}
 */
proto.services.QueryResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.QueryResult;
  return proto.services.QueryResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.QueryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.QueryResult}
 */
proto.services.QueryResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new errors_pb.Error;
      reader.readMessage(value,errors_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new tasks_pb.TaskGraphValueResponse;
      reader.readMessage(value,tasks_pb.TaskGraphValueResponse.deserializeBinaryFromReader);
      msg.setTaskGraphValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.QueryResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.QueryResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.QueryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.QueryResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      errors_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getTaskGraphValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tasks_pb.TaskGraphValueResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional errors.Error error = 1;
 * @return {?proto.errors.Error}
 */
proto.services.QueryResult.prototype.getError = function() {
  return /** @type{?proto.errors.Error} */ (
    jspb.Message.getWrapperField(this, errors_pb.Error, 1));
};


/**
 * @param {?proto.errors.Error|undefined} value
 * @return {!proto.services.QueryResult} returns this
*/
proto.services.QueryResult.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.services.QueryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.QueryResult} returns this
 */
proto.services.QueryResult.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.QueryResult.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional tasks.TaskGraphValueResponse task_graph_values = 2;
 * @return {?proto.tasks.TaskGraphValueResponse}
 */
proto.services.QueryResult.prototype.getTaskGraphValues = function() {
  return /** @type{?proto.tasks.TaskGraphValueResponse} */ (
    jspb.Message.getWrapperField(this, tasks_pb.TaskGraphValueResponse, 2));
};


/**
 * @param {?proto.tasks.TaskGraphValueResponse|undefined} value
 * @return {!proto.services.QueryResult} returns this
*/
proto.services.QueryResult.prototype.setTaskGraphValues = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.services.QueryResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.QueryResult} returns this
 */
proto.services.QueryResult.prototype.clearTaskGraphValues = function() {
  return this.setTaskGraphValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.QueryResult.prototype.hasTaskGraphValues = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.PreTransformSpecResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.PreTransformSpecResult.ResultCase = {
  RESULT_NOT_SET: 0,
  ERROR: 1,
  RESPONSE: 2
};

/**
 * @return {proto.services.PreTransformSpecResult.ResultCase}
 */
proto.services.PreTransformSpecResult.prototype.getResultCase = function() {
  return /** @type {proto.services.PreTransformSpecResult.ResultCase} */(jspb.Message.computeOneofCase(this, proto.services.PreTransformSpecResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PreTransformSpecResult.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PreTransformSpecResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PreTransformSpecResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreTransformSpecResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && errors_pb.Error.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && pretransform_pb.PreTransformSpecResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PreTransformSpecResult}
 */
proto.services.PreTransformSpecResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PreTransformSpecResult;
  return proto.services.PreTransformSpecResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PreTransformSpecResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PreTransformSpecResult}
 */
proto.services.PreTransformSpecResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new errors_pb.Error;
      reader.readMessage(value,errors_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new pretransform_pb.PreTransformSpecResponse;
      reader.readMessage(value,pretransform_pb.PreTransformSpecResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PreTransformSpecResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PreTransformSpecResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PreTransformSpecResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreTransformSpecResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      errors_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      pretransform_pb.PreTransformSpecResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional errors.Error error = 1;
 * @return {?proto.errors.Error}
 */
proto.services.PreTransformSpecResult.prototype.getError = function() {
  return /** @type{?proto.errors.Error} */ (
    jspb.Message.getWrapperField(this, errors_pb.Error, 1));
};


/**
 * @param {?proto.errors.Error|undefined} value
 * @return {!proto.services.PreTransformSpecResult} returns this
*/
proto.services.PreTransformSpecResult.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.services.PreTransformSpecResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.PreTransformSpecResult} returns this
 */
proto.services.PreTransformSpecResult.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.PreTransformSpecResult.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pretransform.PreTransformSpecResponse response = 2;
 * @return {?proto.pretransform.PreTransformSpecResponse}
 */
proto.services.PreTransformSpecResult.prototype.getResponse = function() {
  return /** @type{?proto.pretransform.PreTransformSpecResponse} */ (
    jspb.Message.getWrapperField(this, pretransform_pb.PreTransformSpecResponse, 2));
};


/**
 * @param {?proto.pretransform.PreTransformSpecResponse|undefined} value
 * @return {!proto.services.PreTransformSpecResult} returns this
*/
proto.services.PreTransformSpecResult.prototype.setResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.services.PreTransformSpecResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.PreTransformSpecResult} returns this
 */
proto.services.PreTransformSpecResult.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.PreTransformSpecResult.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.PreTransformValuesResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.PreTransformValuesResult.ResultCase = {
  RESULT_NOT_SET: 0,
  ERROR: 1,
  RESPONSE: 2
};

/**
 * @return {proto.services.PreTransformValuesResult.ResultCase}
 */
proto.services.PreTransformValuesResult.prototype.getResultCase = function() {
  return /** @type {proto.services.PreTransformValuesResult.ResultCase} */(jspb.Message.computeOneofCase(this, proto.services.PreTransformValuesResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PreTransformValuesResult.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PreTransformValuesResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PreTransformValuesResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreTransformValuesResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && errors_pb.Error.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && pretransform_pb.PreTransformValuesResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PreTransformValuesResult}
 */
proto.services.PreTransformValuesResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PreTransformValuesResult;
  return proto.services.PreTransformValuesResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PreTransformValuesResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PreTransformValuesResult}
 */
proto.services.PreTransformValuesResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new errors_pb.Error;
      reader.readMessage(value,errors_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new pretransform_pb.PreTransformValuesResponse;
      reader.readMessage(value,pretransform_pb.PreTransformValuesResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PreTransformValuesResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PreTransformValuesResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PreTransformValuesResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreTransformValuesResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      errors_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      pretransform_pb.PreTransformValuesResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional errors.Error error = 1;
 * @return {?proto.errors.Error}
 */
proto.services.PreTransformValuesResult.prototype.getError = function() {
  return /** @type{?proto.errors.Error} */ (
    jspb.Message.getWrapperField(this, errors_pb.Error, 1));
};


/**
 * @param {?proto.errors.Error|undefined} value
 * @return {!proto.services.PreTransformValuesResult} returns this
*/
proto.services.PreTransformValuesResult.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.services.PreTransformValuesResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.PreTransformValuesResult} returns this
 */
proto.services.PreTransformValuesResult.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.PreTransformValuesResult.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pretransform.PreTransformValuesResponse response = 2;
 * @return {?proto.pretransform.PreTransformValuesResponse}
 */
proto.services.PreTransformValuesResult.prototype.getResponse = function() {
  return /** @type{?proto.pretransform.PreTransformValuesResponse} */ (
    jspb.Message.getWrapperField(this, pretransform_pb.PreTransformValuesResponse, 2));
};


/**
 * @param {?proto.pretransform.PreTransformValuesResponse|undefined} value
 * @return {!proto.services.PreTransformValuesResult} returns this
*/
proto.services.PreTransformValuesResult.prototype.setResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.services.PreTransformValuesResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.PreTransformValuesResult} returns this
 */
proto.services.PreTransformValuesResult.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.PreTransformValuesResult.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.PreTransformExtractResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.PreTransformExtractResult.ResultCase = {
  RESULT_NOT_SET: 0,
  ERROR: 1,
  RESPONSE: 2
};

/**
 * @return {proto.services.PreTransformExtractResult.ResultCase}
 */
proto.services.PreTransformExtractResult.prototype.getResultCase = function() {
  return /** @type {proto.services.PreTransformExtractResult.ResultCase} */(jspb.Message.computeOneofCase(this, proto.services.PreTransformExtractResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.PreTransformExtractResult.prototype.toObject = function(opt_includeInstance) {
  return proto.services.PreTransformExtractResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.PreTransformExtractResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreTransformExtractResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && errors_pb.Error.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && pretransform_pb.PreTransformExtractResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.PreTransformExtractResult}
 */
proto.services.PreTransformExtractResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.PreTransformExtractResult;
  return proto.services.PreTransformExtractResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.PreTransformExtractResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.PreTransformExtractResult}
 */
proto.services.PreTransformExtractResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new errors_pb.Error;
      reader.readMessage(value,errors_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new pretransform_pb.PreTransformExtractResponse;
      reader.readMessage(value,pretransform_pb.PreTransformExtractResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.PreTransformExtractResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.PreTransformExtractResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.PreTransformExtractResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.PreTransformExtractResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      errors_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      pretransform_pb.PreTransformExtractResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional errors.Error error = 1;
 * @return {?proto.errors.Error}
 */
proto.services.PreTransformExtractResult.prototype.getError = function() {
  return /** @type{?proto.errors.Error} */ (
    jspb.Message.getWrapperField(this, errors_pb.Error, 1));
};


/**
 * @param {?proto.errors.Error|undefined} value
 * @return {!proto.services.PreTransformExtractResult} returns this
*/
proto.services.PreTransformExtractResult.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.services.PreTransformExtractResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.PreTransformExtractResult} returns this
 */
proto.services.PreTransformExtractResult.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.PreTransformExtractResult.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional pretransform.PreTransformExtractResponse response = 2;
 * @return {?proto.pretransform.PreTransformExtractResponse}
 */
proto.services.PreTransformExtractResult.prototype.getResponse = function() {
  return /** @type{?proto.pretransform.PreTransformExtractResponse} */ (
    jspb.Message.getWrapperField(this, pretransform_pb.PreTransformExtractResponse, 2));
};


/**
 * @param {?proto.pretransform.PreTransformExtractResponse|undefined} value
 * @return {!proto.services.PreTransformExtractResult} returns this
*/
proto.services.PreTransformExtractResult.prototype.setResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.services.PreTransformExtractResult.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.PreTransformExtractResult} returns this
 */
proto.services.PreTransformExtractResult.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.PreTransformExtractResult.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.services);
